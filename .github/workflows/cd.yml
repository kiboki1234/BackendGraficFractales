# .github/workflows/cd.yml
name: CD - Backend

on:
  workflow_run:
    workflows: ["CI + k6"]          # 👈 Debe coincidir EXACTO con el name: del CI
    types: [completed]
    branches: [main]                # 👈 Filtra por la rama del workflow que terminó

  workflow_dispatch: {}             # 👈 Permite dispararlo manualmente desde Actions

permissions:
  contents: read

concurrency:
  group: cd-backend
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy a Render si CI+k6 OK
    runs-on: ubuntu-latest

    # Solo si el CI terminó en success
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    env:
      BACKEND_URL: ${{ secrets.BACKEND_BASE_URL }}      # p.ej. https://tuapp.onrender.com
      RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}

    # Mapea un environment para que GitHub muestre el badge/URL en la UI
    environment:
      name: production
      url: ${{ env.BACKEND_URL }}

    steps:
      - name: Trigger Render deploy hook
        run: curl -fsS -X POST "$RENDER_DEPLOY_HOOK"

      - name: Esperar a que el backend esté healthy
        run: |
          for i in {1..30}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$BACKEND_URL/health" || true)
            if [ "$code" = "200" ]; then
              echo "Healthy ✅"
              exit 0
            fi
            echo "Intento $i => $code, esperando 10s…"
            sleep 10
          done
          echo "No levantó ❌"
          exit 1

      - name: Publicar URL en el summary
        run: |
          echo "### ✅ Deploy OK" >> $GITHUB_STEP_SUMMARY
          echo "- URL: $BACKEND_URL" >> $GITHUB_STEP_SUMMARY
