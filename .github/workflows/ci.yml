name: CI - Backend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ci-backend-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  BACK_DIR: BACKENDGRAFICFRACTALES   # <-- OJO: usa exactamente el nombre/casing de tu carpeta

jobs:
  unit:
    name: Unit tests + Coverage (≥90%)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.BACK_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Paso de debug para ver estructura y confirmar casing
      - name: Mostrar estructura (debug)
        run: |
          pwd
          ls -la
          echo "---- contenido de $BACK_DIR ----"
          ls -la $BACK_DIR

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          # ¡Casing correcto!
          cache-dependency-path: ${{ env.BACK_DIR }}/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Run unit tests (fail if coverage < 90%)
        run: npm run test:ci
        env:
          CI: "true"
          NODE_ENV: "test"

      - name: Upload coverage (HTML + lcov)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ${{ env.BACK_DIR }}/coverage

  performance:
    name: k6 (${{ matrix.module }} • ${{ matrix.scenario }})
    runs-on: ubuntu-latest
    needs: unit
    # Solo en main o en PRs con etiqueta "perf"
    if: github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'perf'))
    strategy:
      fail-fast: false
      matrix:
        module: [julia, mandelbrot, sierpinski, koch, tree]
        scenario: [ramp, spike, soak]
    defaults:
      run:
        working-directory: ${{ env.BACK_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install k6
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg ca-certificates
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://dl.k6.io/key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/k6.gpg
          echo "deb [signed-by=/etc/apt/keyrings/k6.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update && sudo apt-get install -y k6

      - name: Ensure artifacts dir
        run: mkdir -p artifacts

      - name: Run ${{ matrix.scenario }} for ${{ matrix.module }}
        run: |
          k6 run tests/k6/${{ matrix.module }}/${{ matrix.scenario }}.js \
            --summary-export artifacts/${{ matrix.module }}-${{ matrix.scenario }}.json
        env:
          BASE_URL: ${{ secrets.BACKEND_BASE_URL }}

      - name: Upload k6 summaries
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k6-summaries
          path: ${{ env.BACK_DIR }}/artifacts/*.json
          if-no-files-found: warn
