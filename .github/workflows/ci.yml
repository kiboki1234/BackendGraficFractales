name: CI + k6

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    name: Unit tests + Coverage (≥90%)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install deps
        run: npm install

      # (Opcional) mostrar estructura
      - name: Mostrar estructura (debug)
        run: ls -la && node -v && npm -v

      - name: Run unit tests (fail if coverage < 90%)
        run: npm run test:ci

      - name: Upload coverage (HTML + lcov)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.run_id }}-${{ github.run_attempt }}
          path: |
            coverage
            coverage/lcov.info
          if-no-files-found: error
          compression-level: 6

  performance:
    name: k6 performance (${{ matrix.suite }} • ${{ matrix.scenario }})
    needs: test
    runs-on: ubuntu-latest

    if: |
      github.ref == 'refs/heads/main' ||
      (github.event_name == 'pull_request' &&
      contains(github.event.pull_request.labels.*.name, 'perf'))


    strategy:
      fail-fast: false
      matrix:
        suite: [julia, mandelbrot, koch, sierpinski, tree]
        scenario: [ramp, spike, soak]

    env:
      NODE_ENV: production
      PORT: 5000
      BASE_URL: http://localhost:5000

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install deps
        run: npm install

      - name: Start server (background)
        run: |
          node server.js & echo $! > server.pid
          # Esperar /health hasta 30s
          for i in {1..30}; do
            if curl -fsS "http://localhost:5000/health" >/dev/null; then
              echo "Server OK";
              break
            fi
            echo "Esperando server… ($i/30)"
            sleep 1
          done
          curl -fsS "http://localhost:5000/health"

      - name: Setup k6
        uses: grafana/setup-k6-action@v1
        with:
          version: v0.49.0

      - name: Run k6 ${{ matrix.suite }} / ${{ matrix.scenario }}
        env:
          BASE_URL: http://localhost:5000
        run: |
          mkdir -p k6-out/${{ matrix.suite }}/${{ matrix.scenario }}
          # Salida JSON resumida y JUnit para subirlos
          k6 run \
            --summary-export k6-out/${{ matrix.suite }}/${{ matrix.scenario }}/summary.json \
            --out json=k6-out/${{ matrix.suite }}/${{ matrix.scenario }}/raw.json \
            tests/k6/${{ matrix.suite }}/${{ matrix.scenario }}.js

      - name: Upload k6 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: k6-${{ matrix.suite }}-${{ matrix.scenario }}-${{ github.run_id }}-${{ github.run_attempt }}
          path: k6-out/${{ matrix.suite }}/${{ matrix.scenario }}
          if-no-files-found: error
          compression-level: 6

      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill -9 "$(cat server.pid)" || true
          fi
